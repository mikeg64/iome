//
// time: Fri Oct 23 11:01:39 2009
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// MODULE main
// page assignment: model_input	order=3, windowed=0, showing=0
// page assignment: steercontrol	order=2, windowed=0, showing=0
// page assignment: wave2d	order=4, windowed=0, showing=1
// workspace: width = 494, height = 612
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node String[1]: x = 487, y = 22, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "steerjob1.general"
    // page group: model_input
    //
    // 
    // node Format[19]: x = 576, y = 99, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "dx/%s"
    // page group: model_input
    //
main_Format_19_out_1 = 
    Format(
    main_Format_19_in_1,
    main_String_1_out_1,
    main_Format_19_in_3
    ) [instance: 19, cache: 1];
    // 
    // node Transmitter[27]: x = 482, y = 189, inputs = 1, label = generalfile
    // page group: model_input
    //
generalfile = main_Format_19_out_1;
    // 
    // node Receiver[33]: x = 138, y = 10, inputs = 1, label = generalfile
    // page group: wave2d
    //
main_Receiver_33_out_1[cache: 0] = generalfile;
    // 
    // node Integer[11]: x = 439, y = 20, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_11"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 10 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 10 
    // page group: wave2d
    //
    // 
    // node Compute[1]: x = 376, y = 111, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "int($0/$0+0.49)"
    // page group: wave2d
    // expression: value = int(a/a+0.49)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Integer_11_out_1,
    main_Compute_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Import[1]: x = 166, y = 99, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "wave2d_dx_1.general"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "general"
    // input[4]: visible = 1
    // input[5]: visible = 1
    // input[6]: visible = 1
    // page group: wave2d
    //
main_Import_1_out_1 = 
    Import(
    main_Receiver_33_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Compute_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Select[1]: x = 253, y = 190, inputs = 3, label = Select
    // page group: wave2d
    //
main_Select_1_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Select_1_in_2,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node RubberSheet[1]: x = 253, y = 280, inputs = 4, label = RubberSheet
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 2.0
    // page group: wave2d
    //
main_RubberSheet_1_out_1 = 
    RubberSheet(
    main_Select_1_out_1,
    main_RubberSheet_1_in_2,
    main_RubberSheet_1_in_3,
    main_RubberSheet_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Colormap[1]: x = 366, y = 280, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_1"
    // input[7]: defaulting = 1, visible = 0, type = 5, value = -1.0
    // input[8]: defaulting = 1, visible = 0, type = 5, value = 0.99999899
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -1.0 0.99999899 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = NULL
    // input[18]: defaulting = 0, visible = 0, type = 5, value = NULL
    // page group: wave2d
    // window: position = (0.0000,0.0430), size = 0.6875x0.5872
    //
main_Colormap_1_out_1[cache: 2],
main_Colormap_1_out_2[cache: 2] = 
    Colormap(
    main_Colormap_1_in_1,
    main_Colormap_1_in_2,
    main_Colormap_1_in_3,
    main_Colormap_1_in_4,
    main_Colormap_1_in_5,
    main_Colormap_1_in_6,
    main_Colormap_1_in_7,
    main_Colormap_1_in_8,
    main_Colormap_1_in_9,
    main_Colormap_1_in_10,
    main_Colormap_1_in_11,
    main_Colormap_1_in_12,
    main_Colormap_1_in_13,
    main_Colormap_1_in_14,
    main_Colormap_1_in_15,
    main_Colormap_1_in_16,
    main_Colormap_1_in_17,
    main_Colormap_1_in_18,
    main_Colormap_1_in_19
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 348, y = 370, inputs = 5, label = Color
    // page group: wave2d
    //
main_Color_1_out_1 = 
    Color(
    main_RubberSheet_1_out_1,
    main_Colormap_1_out_1,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 371, y = 460, inputs = 2, label = Collect
    // page group: wave2d
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Collect_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node StringList[5]: x = 202, y = 57, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "nameo" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[3]: x = 225, y = 147, inputs = 2, label = string_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "string_output_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_3_in_1,
    main_StringList_5_out_1
    ) [instance: 3, cache: 1];
    // 
    // node StringList[2]: x = 98, y = 57, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "namei" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[4]: x = 103, y = 147, inputs = 2, label = string_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "string_input_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_4_in_1,
    main_StringList_2_out_1
    ) [instance: 4, cache: 1];
    // 
    // node StringList[3]: x = 204, y = 225, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "stepo" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[5]: x = 320, y = 316, inputs = 2, label = int_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "int_output_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_5_in_1,
    main_StringList_3_out_1
    ) [instance: 5, cache: 1];
    // 
    // node StringList[4]: x = 100, y = 225, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "stepi" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[6]: x = 211, y = 316, inputs = 2, label = int_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "int_input_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_6_in_1,
    main_StringList_4_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Integer[10]: x = 483, y = 439, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_10"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0
    // page group: steercontrol
    //
main_Integer_10_out_1[cache: 2] = 
    Integer(
    main_Integer_10_in_1,
    main_Integer_10_in_2,
    main_Integer_10_in_3,
    main_Integer_10_in_4,
    main_Integer_10_in_5,
    main_Integer_10_in_6,
    main_Integer_10_in_7,
    main_Integer_10_in_8,
    main_Integer_10_in_9,
    main_Integer_10_in_10,
    main_Integer_10_in_11
    ) [instance: 10, cache: 1];
    // 
    // node DXLOutput[7]: x = 507, y = 577, inputs = 2, label = updateserver
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "updateserver"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_7_in_1,
    main_Integer_10_out_1
    ) [instance: 7, cache: 1];
    // 
    // node StringList[6]: x = 531, y = 68, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camupo", "camfromo", "camtoo" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[8]: x = 554, y = 157, inputs = 2, label = vector_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "vector_output_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_8_in_1,
    main_StringList_6_out_1
    ) [instance: 8, cache: 1];
    // 
    // node StringList[7]: x = 427, y = 68, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camfromi", "camtoi", "camupi" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[9]: x = 432, y = 158, inputs = 2, label = vector_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "vector_input_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_9_in_1,
    main_StringList_7_out_1
    ) [instance: 9, cache: 1];
    // 
    // node StringList[8]: x = 531, y = 261, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camwidtho" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[16]: x = 557, y = 351, inputs = 2, label = float_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float_output_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_16_in_1,
    main_StringList_8_out_1
    ) [instance: 16, cache: 1];
    // 
    // node StringList[9]: x = 437, y = 261, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camwidthi" }
    // page group: steercontrol
    //
    // 
    // node DXLOutput[17]: x = 437, y = 351, inputs = 2, label = float_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float_input_list"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_17_in_1,
    main_StringList_9_out_1
    ) [instance: 17, cache: 1];
    // 
    // node Integer[8]: x = 136, y = 368, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_8"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0
    // page group: steercontrol
    //
main_Integer_8_out_1[cache: 2] = 
    Integer(
    main_Integer_8_in_1,
    main_Integer_8_in_2,
    main_Integer_8_in_3,
    main_Integer_8_in_4,
    main_Integer_8_in_5,
    main_Integer_8_in_6,
    main_Integer_8_in_7,
    main_Integer_8_in_8,
    main_Integer_8_in_9,
    main_Integer_8_in_10,
    main_Integer_8_in_11
    ) [instance: 8, cache: 1];
    // 
    // node DXLOutput[18]: x = 135, y = 522, inputs = 2, label = closedx
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "closedx"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_18_in_1,
    main_Integer_8_out_1
    ) [instance: 18, cache: 1];
    // 
    // node Integer[9]: x = 330, y = 421, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_9"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0 
    // input[5]: defaulting = 0, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0 
    // page group: steercontrol
    //
main_Integer_9_out_1[cache: 2] = 
    Integer(
    main_Integer_9_in_1,
    main_Integer_9_in_2,
    main_Integer_9_in_3,
    main_Integer_9_in_4,
    main_Integer_9_in_5,
    main_Integer_9_in_6,
    main_Integer_9_in_7,
    main_Integer_9_in_8,
    main_Integer_9_in_9,
    main_Integer_9_in_10,
    main_Integer_9_in_11
    ) [instance: 9, cache: 1];
    // 
    // node DXLOutput[19]: x = 303, y = 579, inputs = 2, label = updatelocal
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "updatelocal"
    // page group: steercontrol
    //
    DXLOutput(
    main_DXLOutput_19_in_1,
    main_Integer_9_out_1
    ) [instance: 19, cache: 1];
    // 
    // node Image[2]: x = 362, y = 550, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [49.5 49.5 2.02656e-06]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [49.5 49.5 265.304]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 142.176
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 481
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.995
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: wave2d
    // depth: value = 24
    // window: position = (0.0020,0.2370), size = 0.4834x0.6771
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_1_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Integer[1]: x = 10, y = 10, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: model_input
    //
    // 
    // node Integer[2]: x = 95, y = 10, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 100 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 100 
    // page group: model_input
    //
    // 
    // node Integer[3]: x = 180, y = 10, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_3"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 100 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 100 
    // page group: model_input
    //
    // 
    // node Integer[4]: x = 426, y = 269, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_4"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: model_input
    //
    // 
    // node Integer[5]: x = 273, y = 10, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_5"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 32 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 32 
    // page group: model_input
    //
    // 
    // node Scalar[1]: x = 366, y = 10, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 20.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 20.0 
    // page group: model_input
    //
    // 
    // node Scalar[2]: x = 13, y = 261, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 5.28 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 5.28 
    // page group: model_input
    //
    // 
    // node Scalar[3]: x = 85, y = 264, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 200.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 200.0 
    // page group: model_input
    //
    // 
    // node Scalar[4]: x = 158, y = 264, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 8.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 8.0 
    // page group: model_input
    //
    // 
    // node Scalar[5]: x = 227, y = 265, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.01 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.01 
    // page group: model_input
    //
    // 
    // node Scalar[6]: x = 292, y = 266, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.01 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.01 
    // page group: model_input
    //
    // 
    // node Scalar[7]: x = 357, y = 268, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_7"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.05 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.05 
    // page group: model_input
    //
    // 
    // node Transmitter[28]: x = 265, y = 100, inputs = 1, label = numtsteps
    // page group: model_input
    //
numtsteps = main_Integer_5_out_1;
    // 
    // node Transmitter[35]: x = 403, y = 577, inputs = 1, label = updatelocalt
    // page group: steercontrol
    //
updatelocalt = main_Integer_9_out_1;
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_String_1_out_1 = "steerjob1.general";
main_Format_19_in_1 = "dx/%s";
main_Format_19_in_3 = NULL;
main_Format_19_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_33_out_1 = NULL;
main_Integer_11_in_1 = "Integer_11";
main_Integer_11_in_2 = NULL;
main_Integer_11_in_3 = 10 ;
main_Integer_11_in_4 = NULL;
main_Integer_11_in_5 = NULL;
main_Integer_11_in_6 = NULL;
main_Integer_11_in_7 = NULL;
main_Integer_11_in_8 = NULL;
main_Integer_11_in_9 = NULL;
main_Integer_11_in_10 = NULL;
main_Integer_11_in_11 = NULL;
main_Integer_11_out_1 = 10 ;
main_Compute_1_in_1 = "int($0/$0+0.49)";
main_Compute_1_in_3 = NULL;
main_Compute_1_out_1 = NULL;
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = "general";
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_out_1 = NULL;
main_Select_1_in_2 = NULL;
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_RubberSheet_1_in_2 = 2.0;
main_RubberSheet_1_in_3 = NULL;
main_RubberSheet_1_in_4 = NULL;
main_RubberSheet_1_out_1 = NULL;
main_Colormap_1_in_1 = { [0.0 0.666667] [1.0 0.0] };
main_Colormap_1_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_5 = "Colormap_1";
main_Colormap_1_in_6 = NULL;
main_Colormap_1_in_7 = NULL;
main_Colormap_1_in_8 = NULL;
main_Colormap_1_in_9 = NULL;
main_Colormap_1_in_10 = NULL;
main_Colormap_1_in_11 = NULL;
main_Colormap_1_in_12 = { -1.0 0.99999899 };
main_Colormap_1_in_13 = NULL;
main_Colormap_1_in_14 = NULL;
main_Colormap_1_in_15 = NULL;
main_Colormap_1_in_16 = NULL;
main_Colormap_1_in_17 = NULL;
main_Colormap_1_in_18 = NULL;
main_Colormap_1_in_19 = NULL;
main_Colormap_1_out_1 = NULL;
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Collect_1_in_2 = NULL;
main_Collect_1_out_1 = NULL;
main_StringList_5_out_1 = { "nameo" };
main_DXLOutput_3_in_1 = "string_output_list";
main_StringList_2_out_1 = { "namei" };
main_DXLOutput_4_in_1 = "string_input_list";
main_StringList_3_out_1 = { "stepo" };
main_DXLOutput_5_in_1 = "int_output_list";
main_StringList_4_out_1 = { "stepi" };
main_DXLOutput_6_in_1 = "int_input_list";
main_Integer_10_in_1 = "Integer_10";
main_Integer_10_in_2 = NULL;
main_Integer_10_in_3 = 0;
main_Integer_10_in_4 = NULL;
main_Integer_10_in_5 = -1000000;
main_Integer_10_in_6 = 1000000;
main_Integer_10_in_7 = 1.0;
main_Integer_10_in_8 = NULL;
main_Integer_10_in_9 = NULL;
main_Integer_10_in_10 = NULL;
main_Integer_10_in_11 = NULL;
main_Integer_10_out_1 = 0;
main_DXLOutput_7_in_1 = "updateserver";
main_StringList_6_out_1 = { "camupo", "camfromo", "camtoo" };
main_DXLOutput_8_in_1 = "vector_output_list";
main_StringList_7_out_1 = { "camfromi", "camtoi", "camupi" };
main_DXLOutput_9_in_1 = "vector_input_list";
main_StringList_8_out_1 = { "camwidtho" };
main_DXLOutput_16_in_1 = "float_output_list";
main_StringList_9_out_1 = { "camwidthi" };
main_DXLOutput_17_in_1 = "float_input_list";
main_Integer_8_in_1 = "Integer_8";
main_Integer_8_in_2 = NULL;
main_Integer_8_in_3 = 0;
main_Integer_8_in_4 = NULL;
main_Integer_8_in_5 = -1000000;
main_Integer_8_in_6 = 1000000;
main_Integer_8_in_7 = 1.0;
main_Integer_8_in_8 = NULL;
main_Integer_8_in_9 = NULL;
main_Integer_8_in_10 = NULL;
main_Integer_8_in_11 = NULL;
main_Integer_8_out_1 = 0;
main_DXLOutput_18_in_1 = "closedx";
main_Integer_9_in_1 = "Integer_9";
main_Integer_9_in_2 = NULL;
main_Integer_9_in_3 = 0 ;
main_Integer_9_in_4 = NULL;
main_Integer_9_in_5 = -1000000;
main_Integer_9_in_6 = 1000000;
main_Integer_9_in_7 = 1.0;
main_Integer_9_in_8 = NULL;
main_Integer_9_in_9 = NULL;
main_Integer_9_in_10 = NULL;
main_Integer_9_in_11 = NULL;
main_Integer_9_out_1 = 0 ;
main_DXLOutput_19_in_1 = "updatelocal";
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [49.5 49.5 2.02656e-06];
main_Image_2_in_6 = [49.5 49.5 265.304];
main_Image_2_in_7 = NULL;
main_Image_2_in_8 = 481;
main_Image_2_in_9 = 0.995;
main_Image_2_in_10 = [0 1 0];
main_Image_2_in_11 = 30.0;
main_Image_2_in_12 = 1;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 1 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 100 ;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_3_in_1 = "Integer_3";
main_Integer_3_in_2 = NULL;
main_Integer_3_in_3 = 100 ;
main_Integer_3_in_4 = NULL;
main_Integer_3_in_5 = NULL;
main_Integer_3_in_6 = NULL;
main_Integer_3_in_7 = NULL;
main_Integer_3_in_8 = NULL;
main_Integer_3_in_9 = NULL;
main_Integer_3_in_10 = NULL;
main_Integer_3_in_11 = NULL;
main_Integer_4_in_1 = "Integer_4";
main_Integer_4_in_2 = NULL;
main_Integer_4_in_3 = 1 ;
main_Integer_4_in_4 = NULL;
main_Integer_4_in_5 = NULL;
main_Integer_4_in_6 = NULL;
main_Integer_4_in_7 = NULL;
main_Integer_4_in_8 = NULL;
main_Integer_4_in_9 = NULL;
main_Integer_4_in_10 = NULL;
main_Integer_4_in_11 = NULL;
main_Integer_5_in_1 = "Integer_5";
main_Integer_5_in_2 = NULL;
main_Integer_5_in_3 = 32 ;
main_Integer_5_in_4 = NULL;
main_Integer_5_in_5 = NULL;
main_Integer_5_in_6 = NULL;
main_Integer_5_in_7 = NULL;
main_Integer_5_in_8 = NULL;
main_Integer_5_in_9 = NULL;
main_Integer_5_in_10 = NULL;
main_Integer_5_in_11 = NULL;
main_Integer_5_out_1 = 32 ;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 20.0 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 5.28 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 200.0 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 8.0 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.01 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = NULL;
main_Scalar_6_in_3 = 0.01 ;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_7_in_1 = "Scalar_7";
main_Scalar_7_in_2 = NULL;
main_Scalar_7_in_3 = 0.05 ;
main_Scalar_7_in_4 = NULL;
main_Scalar_7_in_5 = NULL;
main_Scalar_7_in_6 = NULL;
main_Scalar_7_in_7 = NULL;
main_Scalar_7_in_8 = NULL;
main_Scalar_7_in_9 = NULL;
main_Scalar_7_in_10 = NULL;
main_Scalar_7_in_11 = NULL;
Executive("product version 4 4 4");
$sync
// This network contains DXLink tools.  Therefore, the following line(s)
// that would cause an execution when run in script mode have been 
// commented out.  This will facilitate the use of the DXLink routines
// exDXLLoadScript() and DXLLoadVisualProgram() when the DXLink
// application is connected to an executive.
// main();
