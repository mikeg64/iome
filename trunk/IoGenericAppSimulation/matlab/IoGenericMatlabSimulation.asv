%To use these functions make sure the location of the IOME iogs application
%is on the path
%Linux export IOME_HOME=PATHTOIOME
%Linux export PATH=$PATH":$IOME_HOME/bin"
%Windows set IOME_HOME=PATHTOIOME
%Windows set PATH=%PATH%;$IOME_HOME/bin

function [vec]=stringtovec(stringvar, vsize, separator)
  vec=zeros(vsize,1);
  newformatstring='';
  formatmark='%f'
  for i=1:vsize
    if i>1 then
      formatstring=sprintf('%s%s%s',newformatstring,separator,formatmark);
    else
      formatstring=sprintf('%s',formatmark);
    end
    newformatstring=formatstring;
  end
  vec=msscanf(-1,stringvar,formatstring);
%endfunction

function [vecstring]=vectostring(vec,separator)
  [r,vsize]=size(vec);
  vecstring='';
  for i=1:vsize
    if i>1 then
      newvecstring=sprintf('%s%s%f',vecstring,separator,vec(i));
    else
      newvecstring=sprintf('%f',vec(i));    
    end
    vecstring=newvecstring;
  end
  
%endfunction

function [result]=GetNSteps(elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  
  %scommand=sprintf('iogs getnsteps %d %d %s',  id,port,server);
  %sresult=unix_g(scommand);
  %result=msscanf(sresult,'%d');
  result=getnsteps(obj,id);
  %status=0;
%endfunction

function [result]=GetStep(elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  %scommand=sprintf('iogs getstep %d %d %s',  id,port,server);
  %sresult=unix_g(scommand);
  %result=msscanf(sresult,'%d');
    result=getstep(obj,id);
  %status=0;
%endfunction


function [status]=SetNSteps(var,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  status=;
%endfunction

function [status]=SetStep(var,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  status=;
%endfunction



function [status]=ExitIOME(elist)
  %Stop the server and exit IOME
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport]; 
  
  
  
  status=0;
%endfunction

function [status]=RunSimulation(simfile, outfile, elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  %Start the generic simulation
  %Simulation name
  %Config name
  %State file name
  %port
  
  
  status=0;
%endfunction

function [simid]=SubmitSimulation(simfile, elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  %Submit the generic simulation
  %Simulation Config name
  %returns
  
  
  simid=;
  
%endfunction

function [status]=SimulationStatus(elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  %Submit the generic simulation
  %Simulation Config name
  %returns
  
  
  status=;
  
%endfunction

function [status]=GetSimulationResult(outfile, elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  %Submit the generic simulation
  %Simulation Config name
  %returns
  
  
  status=);
  
%endfunction

function [status]=DeleteSimulation(elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  %Submit the generic simulation
  %Simulation Config name
  %returns
  
  
  status=;
  
%endfunction


function [status]=ReadSimulation(simfile, elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  %Start the generic simulation
  %Simulation name
  %Config name
  %State file name
  %port
  
  
  status=0;
%endfunction

function [status]=NewSimulation(simname,xslname, elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  %Start the generic simulation
  %Simulation name
  %Config name
  %State file name
  %port
  
  
  status=0;
%endfunction


function [status]=WriteSimulation(simfile, elist)
%function [status]=InitIOME(simname, configname, statename,port,server)
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  %Start the generic simulation
  %Simulation name
  %Config name
  %State file name
  %port
  
  
  status=0;
%endfunction


function [status]=AddMetadata(name, property,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport]; 
  
  
  
  status=0;
%endfunction

function [status]=SetMetadata(name, property,elist)
  %SetMetadata(name, property, port)
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

    sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  
  status=0;
%endfunction

function [property]=GetMetadata(name,elist)
  %GetMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

    sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
 
  property=0;
%endfunction

function [status]=AddDoubleParam(name, doub, flag,elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  
  
  status=0;
%endfunction

function [result]=GetDoubleParam(name,elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  
  
  result=;
  
  %status=0;
%endfunction

function [status]=SetDoubleParam(name, doub,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  
  status=0;
%endfunction


function [status]=AddIntParam(name, var, flag,elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
  
  
  
  status=0;
%endfunction

function [result]=GetObjNum(elist)
  
 nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  
 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];



  
   result=;
   
    
%endfunction



function [result]=GetIntParam(name,elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
 
  result=;

  %status=0;
%endfunction



function [status]=SetIntParam(name, var,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  status=0;
%endfunction











function [status]=AddStringParam(name, var, flag,elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  
 
  status=0;
%endfunction

function [result]=GetStringParam(name,elist)
  %AddMetadata(name, property, port) 
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  
  result=;
  %status=0;
%endfunction

function [status]=SetStringParam(name, var,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  
   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  
  status=0;
%endfunction












function [status]=AddVecParam(name, var, vsize,flag,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

 
  status=0;
%endfunction

function [vec]=GetVecParam(name, vecsize,elist)
  %AddMetadata(name, property, port)
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  vec
%endfunction

function [vin]=SetVecParam(name, vin, vecsize,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  vecstring=vectostring(vin, ',');
  
  %put double quotes around the vec string so that it is
  %passed into unix shell script as a single variable
  uvecstring=sprintf('''%s''',vecstring);
  scommand=sprintf('iogs setparam vec %s %s %d %d %d %s', name, uvecstring,vecsize,  id,port,server);
  result=unix_g(scommand);
  status=0;
%endfunction



function [status]=AddMatParam(name, var,flag,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  [nr,nc]=size(var);

    ind=1;
  for i=1:nr
    for j=1:nc
     vvar(ind)=var(i,j);
     ind=ind+1;
    end
  end
   matstring=vectostring(vvar',' ');
   %disp(matstring);
  
  %put double quotes around the vec string so that it is
  %passed into unix shell script as a single variable
  umatstring=sprintf('''%s''',matstring);
  
  scommand=sprintf('iogs addparam mat %s %s %d %d %d %d %d %s', name, umatstring,nr,nc,flag,  id,port,server);
  %disp(scommand);
  result=unix_g(scommand);
  status=0;
%endfunction

function [mat]=GetMatParam(name,nr,nc,elist)
  %AddMetadata(name, property, port)
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  
  scommand=sprintf('iogs getparam mat %s %d %d %d %d %s', name,nr,nc,  id,port,server);
  result=unix_g(scommand);
  tmat=stringtovec(result, nr*nc,' ');
  
  ind=1;
  for i=1:nr
    for j=1:nc
     mat(i,j)=tmat(ind);
     ind=ind+1;
    end
  end
  
  
  

  status=0;
%endfunction

function [vvar]=SetMatParam(name, var, elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
  
 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  [nr,nc]=size(var);
     ind=1;
     vvar=zeros(nr*nc);
  for i=1:nr
    for j=1:nc
     vvar(ind)=var(i,j);
     ind=ind+1;
    end
  end 
  vecstring=vectostring(vvar,' ');
  
  %put double quotes around the vec string so that it is
  %passed into unix shell script as a single variable
  uvecstring=sprintf('''%s''',vecstring);
  scommand=sprintf('iogs setparam mat %s %s %d %d %d %d %s', name, uvecstring,nr,nc,  id, port,server);
  result=unix_g(scommand);
  status=0;
%endfunction







function [status]=Addmmat3dParam(name, var, ni,nj,nk,nr,nc,flag,elist)
  %AddMetadata(name, property, port) 

  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  
    ind=1;
    for i1=1:ni
       for i2=1:nj
          for i3=1:nk
            for i=1:nr
              for j=1:nc
               vvar(ind)=var(i1,i2,i3,i,j);
               ind=ind+1;
              end
            end
        end
      end
    end
   matstring=vectostring(vvar, ni*nj*nk*nr*nc,',');
  
  %put double quotes around the vec string so that it is
  %passed into unix shell script as a single variable
  umatstring=sprintf('''%s''',matstring); 
  scommand=sprintf('iogs addparam mmat3d %s %s  %d %d %d %d %d %d %d %d %s', name, umatstring,ni,nj,nk,nr,nc,flag,  id, port,server);
  result=unix_g(scommand);
  status=0;
%endfunction

function [mat]=Getmmat3dParam(name, ni,nj,nk,nr,nc,elist)
  %AddMetadata(name, property, port)
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

  sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];
 
  
  scommand=sprintf('iogs getparam mmat3d %s %d %d %d %d %d %d %d %s', name,ni,nj,nk,nr,nc,  id,port,server);
  result=unix_g(scommand);
  tmat=stringtovec(result, ni*nj*nk*nr*nc,',');
    
    ind=1;
    for i1=1:ni
       for i2=1:nj
          for i3=1:nk
            for i=1:nr
              for j=1:nc
               mat(i1,i2,i3,i,j)=tmat(ind);
               ind=ind+1;
              end
            end
        end
      end
    end
  

  status=0;
%endfunction

function [vec]=Setmmat3dParam(name, var, ni,nj,nk,nr,nc,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

    ind=1;
    for i1=1:ni
       for i2=1:nj
          for i3=1:nk
            for i=1:nr
              for j=1:nc
               tmat(ind)=var(i1,i2,i3,i,j);
               ind=ind+1;
              end
            end
        end
      end
    end
  mstring=vectostring(tmat, ni*nj*nk*nr*nc,',');
  
  %put double quotes around the vec string so that it is
  %passed into unix shell script as a single variable
  umstring=sprintf('''%s''',mstring);
  scommand=sprintf('iogs setparam mmat3d %s %s %d %d %d %d %d  %d %d %s', name, umstring, ni,nj,nk,nr,nc,  id,port,server);
  result=unix_g(scommand);
  status=0;
%endfunction

function [objnum]=GetObjNum(elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  scommand=sprintf('iogs getobjnum %d  %d %s',id,  port,server);
  objnum=unix_g(scommand);
  
%endfunction

function [numobj]=GetNumObj(elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end

   sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  scommand=sprintf('iogs getnumobj %d  %d %s', id,  port,server);
  numobj=unix_g(scommand);
  
%endfunction

function [status]=GroupBarrier(elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  scommand=sprintf('iogs groupbarrier %d  %d %s', id,  port,server);
  status=unix_g(scommand);
  
%endfunction




function [status]=DeleteParam(paramname,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  scommand=sprintf('iogs deleteparam %s %d  %d %s', paramname,id,  port,server);
  status=unix_g(scommand);
  
%endfunction

function [paramlist]=ListParam(paramtype,elist)
  %AddMetadata(name, property, port) 
  
  nargin=length(elist);
  if nargin>0 then
    server=elist(1);
    if nargin>1 then
      port=elist(2);
      if nargin>2 then
         id=elist(3);
      else
         id=0;
      end 
    else
      port=8080;
    end
  else
    server='localhost';
    port=8080;
    id=0;
  end
 sport=sprintf('%d',port);
  obj.endpoint=['http://',server,':',sport];

  
  scommand=sprintf('iogs listparam %s %d  %d %s', paramtype,id,  port,server);
  paramlist=unix_g(scommand);
  
%%endfunction






