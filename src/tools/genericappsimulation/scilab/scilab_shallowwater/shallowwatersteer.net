//
// time: Fri Mar 13 20:14:09 2009
//
// version: 3.2.0 (format), 4.4.0 (DX)
//
//
// MODULE main
// page assignment: Untitled_1	order=2, windowed=0, showing=0
// page assignment: model_input	order=4, windowed=0, showing=0
// page assignment: steeringcont	order=3, windowed=0, showing=1
// page assignment: wave2d	order=5, windowed=0, showing=0
// workspace: width = 786, height = 744
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node String[1]: x = 179, y = 100, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "dx"
    // page group: model_input
    //
    // 
    // node StringList[1]: x = 238, y = 10, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "tsteer1" }
    // page group: model_input
    //
    // 
    // node Selector[4]: x = 243, y = 100, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_4"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "tsteer1" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = {"tsteer1" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = {0  }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "tsteer1" 
    // page group: model_input
    //
main_Selector_4_out_1[cache: 2],
main_Selector_4_out_2[cache: 2] = 
    Selector(
    main_Selector_4_in_1,
    main_Selector_4_in_2,
    main_Selector_4_in_3,
    main_StringList_1_out_1,
    main_Selector_4_in_5,
    main_Selector_4_in_6,
    main_Selector_4_in_7
    ) [instance: 4, cache: 1];
    // 
    // node Format[19]: x = 85, y = 279, inputs = 4, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s/steer%s.general"
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "tmp"
    // page group: model_input
    //
main_Format_19_out_1 = 
    Format(
    main_Format_19_in_1,
    main_String_1_out_1,
    main_Selector_4_out_2,
    main_Format_19_in_4
    ) [instance: 19, cache: 1];
    // 
    // node Transmitter[27]: x = 96, y = 370, inputs = 1, label = generalfile
    // page group: model_input
    //
generalfile = main_Format_19_out_1;
    // 
    // node Receiver[33]: x = 10, y = 10, inputs = 1, label = generalfile
    // page group: wave2d
    //
main_Receiver_33_out_1[cache: 0] = generalfile;
    // 
    // node Integer[5]: x = 384, y = 10, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_5"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 130
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 130
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 130
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 130
    // page group: model_input
    //
    // 
    // node Integer[1]: x = 327, y = 100, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 118 
    // input[4]: visible = 1
    // input[5]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 1, type = 1, value = 130
    // input[7]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[8]: defaulting = 0, visible = 1, type = 32, value = NULL
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[11]: visible = 1
    // output[1]: visible = 1, type = 1, value = 118 
    // page group: model_input
    //
main_Integer_1_out_1[cache: 2] = 
    Integer(
    main_Integer_1_in_1,
    main_Integer_1_in_2,
    main_Integer_1_in_3,
    main_Integer_1_in_4,
    main_Integer_1_in_5,
    main_Integer_5_out_1,
    main_Integer_1_in_7,
    main_Integer_1_in_8,
    main_Integer_1_in_9,
    main_Integer_1_in_10,
    main_Integer_1_in_11
    ) [instance: 1, cache: 1];
    // 
    // node Compute[4]: x = 377, y = 190, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "int($0/$0+0.49)"
    // page group: model_input
    // expression: value = int(a/a+0.49)
    // name[2]: value = a
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Integer_1_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[29]: x = 372, y = 280, inputs = 1, label = currentstep
    // page group: model_input
    //
currentstep = main_Compute_4_out_1;
    // 
    // node Receiver[35]: x = 265, y = 21, inputs = 1, label = currentstep
    // page group: wave2d
    //
main_Receiver_35_out_1[cache: 0] = currentstep;
    // 
    // node Import[1]: x = 34, y = 100, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "wave2d_dx_1.general"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "general"
    // input[4]: visible = 1
    // input[5]: visible = 1
    // input[6]: defaulting = 1, visible = 1, type = 1, value = NULL
    // page group: wave2d
    //
main_Import_1_out_1 = 
    Import(
    main_Receiver_33_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Receiver_35_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Select[6]: x = 58, y = 190, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "field1"
    // page group: wave2d
    //
main_Select_6_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Select_6_in_2,
    main_Select_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node AutoColor[1]: x = 131, y = 370, inputs = 10, label = AutoColor
    // page group: wave2d
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Select_6_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Select[7]: x = 215, y = 190, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "field0"
    // page group: wave2d
    //
main_Select_7_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Select_7_in_2,
    main_Select_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node AutoColor[2]: x = 232, y = 370, inputs = 10, label = AutoColor
    // page group: wave2d
    //
main_AutoColor_2_out_1,
main_AutoColor_2_out_2 = 
    AutoColor(
    main_Select_7_out_1,
    main_AutoColor_2_in_2,
    main_AutoColor_2_in_3,
    main_AutoColor_2_in_4,
    main_AutoColor_2_in_5,
    main_AutoColor_2_in_6,
    main_AutoColor_2_in_7,
    main_AutoColor_2_in_8,
    main_AutoColor_2_in_9,
    main_AutoColor_2_in_10
    ) [instance: 2, cache: 1];
    // 
    // node AutoGlyph[1]: x = 239, y = 460, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "arrow2D"
    // page group: wave2d
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_AutoColor_2_out_1,
    main_AutoGlyph_1_in_2,
    main_AutoGlyph_1_in_3,
    main_AutoGlyph_1_in_4,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node RubberSheet[1]: x = 126, y = 460, inputs = 4, label = RubberSheet
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 0.01
    // input[4]: defaulting = 0, visible = 0, type = 5, value = 0.1
    // page group: wave2d
    //
main_RubberSheet_1_out_1 = 
    RubberSheet(
    main_AutoColor_1_out_1,
    main_RubberSheet_1_in_2,
    main_RubberSheet_1_in_3,
    main_RubberSheet_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 258, y = 550, inputs = 2, label = Collect
    // page group: wave2d
    //
main_Collect_1_out_1 = 
    Collect(
    main_RubberSheet_1_out_1,
    main_AutoGlyph_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node DXLInput[1]: x = 327, y = 285, inputs = 1, label = frequencyi
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 10
    // page group: steeringcont
    //
    main_DXLInput_1_out_1 = frequencyi;
    // 
    // node DXLInput[2]: x = 418, y = 288, inputs = 1, label = amplitudei
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 10
    // page group: steeringcont
    //
    main_DXLInput_2_out_1 = amplitudei;
    // 
    // node DXLInput[3]: x = 501, y = 286, inputs = 1, label = sxi
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 5
    // page group: steeringcont
    //
    main_DXLInput_3_out_1 = sxi;
    // 
    // node DXLInput[4]: x = 638, y = 282, inputs = 1, label = syi
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 10
    // page group: steeringcont
    //
    main_DXLInput_4_out_1 = syi;
    // 
    // node DXLInput[5]: x = 669, y = 294, inputs = 1, label = stepi
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 119
    // page group: steeringcont
    //
    main_DXLInput_5_out_1 = stepi;
    // 
    // node DXLInput[6]: x = 753, y = 298, inputs = 1, label = nti
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 131
    // page group: steeringcont
    //
    main_DXLInput_6_out_1 = nti;
    // 
    // node DXLInput[7]: x = 689, y = 426, inputs = 1, label = finishsteeringi
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 0
    // page group: steeringcont
    //
    main_DXLInput_7_out_1 = finishsteeringi;
    // 
    // node DXLInput[8]: x = 545, y = 245, inputs = 1, label = h0i
    // input[1]: defaulting = 0, visible = 1, type = 29, value = 10
    // page group: steeringcont
    //
    main_DXLInput_8_out_1 = h0i;
    // 
    // node StringList[5]: x = 150, y = 54, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "syo", "sxo", "amplitudeo", "frequencyo", "h0o" }
    // page group: steeringcont
    //
    // 
    // node DXLOutput[3]: x = 173, y = 144, inputs = 2, label = float_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float_output_list"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_3_in_1,
    main_StringList_5_out_1
    ) [instance: 3, cache: 1];
    // 
    // node StringList[2]: x = 46, y = 53, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "syi", "sxi", "frequencyi", "amplitudei", "h0i" }
    // page group: steeringcont
    //
    // 
    // node DXLOutput[4]: x = 51, y = 144, inputs = 2, label = float_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float_input_list"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_4_in_1,
    main_StringList_2_out_1
    ) [instance: 4, cache: 1];
    // 
    // node StringList[3]: x = 152, y = 223, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "stepo", "nto", "finishsteeringo" }
    // page group: steeringcont
    //
    // 
    // node DXLOutput[5]: x = 175, y = 313, inputs = 2, label = int_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "int_output_list"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_5_in_1,
    main_StringList_3_out_1
    ) [instance: 5, cache: 1];
    // 
    // node StringList[4]: x = 48, y = 223, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "stepi", "nti", "finishsteeringi" }
    // page group: steeringcont
    //
    // 
    // node DXLOutput[6]: x = 53, y = 313, inputs = 2, label = int_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "int_input_list"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_6_in_1,
    main_StringList_4_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Scalar[3]: x = 367, y = 31, inputs = 11, label = frequency
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 10.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "frequency"
    // output[1]: visible = 1, type = 5, value = 10.0 
    // page group: steeringcont
    //
main_Scalar_3_out_1[cache: 2] = 
    Scalar(
    main_Scalar_3_in_1,
    main_Scalar_3_in_2,
    main_Scalar_3_in_3,
    main_Scalar_3_in_4,
    main_Scalar_3_in_5,
    main_Scalar_3_in_6,
    main_Scalar_3_in_7,
    main_Scalar_3_in_8,
    main_Scalar_3_in_9,
    main_Scalar_3_in_10,
    main_Scalar_3_in_11
    ) [instance: 3, cache: 1];
    // 
    // node DXLOutput[7]: x = 413, y = 141, inputs = 2, label = frequencyo
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "frequencyo"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_7_in_1,
    main_Scalar_3_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Scalar[4]: x = 433, y = 25, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 10.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 10.0 
    // page group: steeringcont
    //
    // 
    // node DXLOutput[8]: x = 510, y = 149, inputs = 2, label = amplitudeo
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "amplitudeo"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_8_in_1,
    main_Scalar_4_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Scalar[5]: x = 510, y = 38, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 5.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 5.0 
    // page group: steeringcont
    //
    // 
    // node DXLOutput[9]: x = 606, y = 160, inputs = 2, label = sxo
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "sxo"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_9_in_1,
    main_Scalar_5_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Scalar[6]: x = 574, y = 31, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_6"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 10.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 10.0 
    // page group: steeringcont
    //
    // 
    // node DXLOutput[10]: x = 684, y = 168, inputs = 2, label = syo
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "syo"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_10_in_1,
    main_Scalar_6_out_1
    ) [instance: 10, cache: 1];
    // 
    // node StringList[8]: x = 485, y = 241, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camwidtho" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[16]: x = 511, y = 331, inputs = 2, label = float_output_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float_output_list"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_16_in_1,
    main_StringList_8_out_1
    ) [instance: 16, cache: 1];
    // 
    // node StringList[9]: x = 391, y = 241, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camwidthi" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[17]: x = 391, y = 331, inputs = 2, label = float_input_list
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float_input_list"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_17_in_1,
    main_StringList_9_out_1
    ) [instance: 17, cache: 1];
    // 
    // node StringList[10]: x = 156, y = 37, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "nameo" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[20]: x = 179, y = 127, inputs = 2, label = DXLOutput_20
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "DXLOutput_20"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_20_in_1,
    main_StringList_10_out_1
    ) [instance: 20, cache: 1];
    // 
    // node StringList[11]: x = 52, y = 36, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "namei" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[21]: x = 57, y = 127, inputs = 2, label = DXLOutput_21
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "DXLOutput_21"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_21_in_1,
    main_StringList_11_out_1
    ) [instance: 21, cache: 1];
    // 
    // node StringList[12]: x = 158, y = 205, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "stepo" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[22]: x = 274, y = 296, inputs = 2, label = DXLOutput_22
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "DXLOutput_22"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_22_in_1,
    main_StringList_12_out_1
    ) [instance: 22, cache: 1];
    // 
    // node StringList[13]: x = 54, y = 205, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "stepi" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[23]: x = 165, y = 296, inputs = 2, label = DXLOutput_23
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "DXLOutput_23"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_23_in_1,
    main_StringList_13_out_1
    ) [instance: 23, cache: 1];
    // 
    // node StringList[6]: x = 485, y = 48, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camupo", "camfromo", "camtoo" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[25]: x = 508, y = 137, inputs = 2, label = DXLOutput_25
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "DXLOutput_25"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_25_in_1,
    main_StringList_6_out_1
    ) [instance: 25, cache: 1];
    // 
    // node StringList[7]: x = 381, y = 48, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "camfromi", "camtoi", "camupi" }
    // page group: Untitled_1
    //
    // 
    // node DXLOutput[26]: x = 386, y = 138, inputs = 2, label = DXLOutput_26
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "DXLOutput_26"
    // page group: Untitled_1
    //
    DXLOutput(
    main_DXLOutput_26_in_1,
    main_StringList_7_out_1
    ) [instance: 26, cache: 1];
    // 
    // node Integer[11]: x = 55, y = 556, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_11"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0 
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0 
    // page group: steeringcont
    //
main_Integer_11_out_1[cache: 2] = 
    Integer(
    main_Integer_11_in_1,
    main_Integer_11_in_2,
    main_Integer_11_in_3,
    main_Integer_11_in_4,
    main_Integer_11_in_5,
    main_Integer_11_in_6,
    main_Integer_11_in_7,
    main_Integer_11_in_8,
    main_Integer_11_in_9,
    main_Integer_11_in_10,
    main_Integer_11_in_11
    ) [instance: 11, cache: 1];
    // 
    // node DXLOutput[27]: x = 35, y = 682, inputs = 2, label = closedx
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "closedx"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_27_in_1,
    main_Integer_11_out_1
    ) [instance: 27, cache: 1];
    // 
    // node Integer[12]: x = 200, y = 452, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_12"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: steeringcont
    //
main_Integer_12_out_1[cache: 2] = 
    Integer(
    main_Integer_12_in_1,
    main_Integer_12_in_2,
    main_Integer_12_in_3,
    main_Integer_12_in_4,
    main_Integer_12_in_5,
    main_Integer_12_in_6,
    main_Integer_12_in_7,
    main_Integer_12_in_8,
    main_Integer_12_in_9,
    main_Integer_12_in_10,
    main_Integer_12_in_11
    ) [instance: 12, cache: 1];
    // 
    // node DXLOutput[28]: x = 158, y = 680, inputs = 2, label = updatelocal
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "updatelocal"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_28_in_1,
    main_Integer_12_out_1
    ) [instance: 28, cache: 1];
    // 
    // node Integer[13]: x = 392, y = 554, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_13"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1 
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1 
    // page group: steeringcont
    //
main_Integer_13_out_1[cache: 2] = 
    Integer(
    main_Integer_13_in_1,
    main_Integer_13_in_2,
    main_Integer_13_in_3,
    main_Integer_13_in_4,
    main_Integer_13_in_5,
    main_Integer_13_in_6,
    main_Integer_13_in_7,
    main_Integer_13_in_8,
    main_Integer_13_in_9,
    main_Integer_13_in_10,
    main_Integer_13_in_11
    ) [instance: 13, cache: 1];
    // 
    // node DXLOutput[29]: x = 389, y = 668, inputs = 2, label = updateserver
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "updateserver"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_29_in_1,
    main_Integer_13_out_1
    ) [instance: 29, cache: 1];
    // 
    // node Integer[14]: x = 29, y = 391, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_14"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0 
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0 
    // page group: steeringcont
    //
main_Integer_14_out_1[cache: 2] = 
    Integer(
    main_Integer_14_in_1,
    main_Integer_14_in_2,
    main_Integer_14_in_3,
    main_Integer_14_in_4,
    main_Integer_14_in_5,
    main_Integer_14_in_6,
    main_Integer_14_in_7,
    main_Integer_14_in_8,
    main_Integer_14_in_9,
    main_Integer_14_in_10,
    main_Integer_14_in_11
    ) [instance: 14, cache: 1];
    // 
    // node DXLOutput[30]: x = 26, y = 494, inputs = 2, label = finishsteeringo
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "finishsteeringo"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_30_in_1,
    main_Integer_14_out_1
    ) [instance: 30, cache: 1];
    // 
    // node Scalar[7]: x = 263, y = 29, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_7"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 500.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 500.0 
    // page group: steeringcont
    //
    // 
    // node DXLOutput[31]: x = 292, y = 123, inputs = 2, label = h0o
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "h0o"
    // page group: steeringcont
    //
    DXLOutput(
    main_DXLOutput_31_in_1,
    main_Scalar_7_out_1
    ) [instance: 31, cache: 1];
    // 
    // node Format[25]: x = 382, y = 438, inputs = 9, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%d %d %d %d %d %d %d"
    // page group: steeringcont
    //
main_Format_25_out_1 = 
    Format(
    main_Format_25_in_1,
    main_DXLInput_1_out_1,
    main_DXLInput_2_out_1,
    main_DXLInput_3_out_1,
    main_DXLInput_4_out_1,
    main_DXLInput_8_out_1,
    main_DXLInput_5_out_1,
    main_DXLInput_6_out_1,
    main_DXLInput_7_out_1
    ) [instance: 25, cache: 1];
    // 
    // node Echo[2]: x = 632, y = 567, inputs = 2, label = Echo
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"f amp xloc yloc initialheight currentstep numsteps"}
    // page group: steeringcont
    //
    Echo(
    main_Echo_2_in_1,
    main_Format_25_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Format[24]: x = 231, y = 190, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s/steer%s.general"
    // page group: model_input
    //
main_Format_24_out_1 = 
    Format(
    main_Format_24_in_1,
    main_String_1_out_1,
    main_Selector_4_out_2
    ) [instance: 24, cache: 1];
    // 
    // node Format[26]: x = 24, y = 191, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s/base%s.general"
    // page group: model_input
    //
main_Format_26_out_1 = 
    Format(
    main_Format_26_in_1,
    main_String_1_out_1,
    main_Selector_4_out_2
    ) [instance: 26, cache: 1];
    // 
    // node Format[1]: x = 187, y = 351, inputs = 6, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "echo 'file = tmp/%ss%d.out' > %s;cat %s >> %s"
    // page group: model_input
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Selector_4_out_2,
    main_Integer_1_out_1,
    main_Format_24_out_1,
    main_Format_26_out_1,
    main_Format_24_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[2]: x = 249, y = 640, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [24.5235 25.7293 8.32469]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-2.13964 -64.6352 116.02]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 76.682
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 488
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 1.124
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.108459 0.774594 0.62309]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[23]: defaulting = 0, visible = 0, type = 5, value = 0.5
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: wave2d
    // depth: value = 24
    // window: position = (0.3516,0.0326), size = 0.4902x0.7721
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_1_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[28]: x = 10, y = 100, inputs = 1, label = numtsteps
    // page group: model_input
    //
numtsteps = main_Integer_5_out_1;
    // 
    // node Receiver[34]: x = 130, y = 10, inputs = 1, label = numtsteps
    // page group: wave2d
    //
main_Receiver_34_out_1[cache: 0] = numtsteps;
    // 
    // node System[1]: x = 209, y = 430, inputs = 1, label = System
    // page group: model_input
    //
    System(
    main_Format_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[36]: x = 268, y = 677, inputs = 1, label = updatelocalt
    // page group: steeringcont
    //
updatelocalt = main_Integer_12_out_1;
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_String_1_out_1 = "dx";
main_StringList_1_out_1 = { "tsteer1" };
main_Selector_4_in_1 = "Selector_4";
main_Selector_4_in_2 = "tsteer1" ;
main_Selector_4_in_3 = 0 ;
main_Selector_4_in_5 = NULL;
main_Selector_4_in_6 = NULL;
main_Selector_4_in_7 = NULL;
main_Selector_4_out_2 = "tsteer1" ;
main_Format_19_in_1 = "%s/steer%s.general";
main_Format_19_in_4 = NULL;
main_Format_19_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_33_out_1 = NULL;
main_Integer_5_in_1 = "Integer_5";
main_Integer_5_in_2 = NULL;
main_Integer_5_in_3 = 130;
main_Integer_5_in_4 = NULL;
main_Integer_5_in_5 = NULL;
main_Integer_5_in_6 = NULL;
main_Integer_5_in_7 = NULL;
main_Integer_5_in_8 = NULL;
main_Integer_5_in_9 = NULL;
main_Integer_5_in_10 = NULL;
main_Integer_5_in_11 = NULL;
main_Integer_5_out_1 = 130;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 118 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = 1;
main_Integer_1_in_7 = 1.0;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 118 ;
main_Compute_4_in_1 = "int($0/$0+0.49)";
main_Compute_4_out_1 = NULL;
main_Transmitter_29_out_1 = NULL;
main_Receiver_35_out_1 = NULL;
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = "general";
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_out_1 = NULL;
main_Select_6_in_2 = "field1";
main_Select_6_in_3 = NULL;
main_Select_6_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_Select_7_in_2 = "field0";
main_Select_7_in_3 = NULL;
main_Select_7_out_1 = NULL;
main_AutoColor_2_in_2 = NULL;
main_AutoColor_2_in_3 = NULL;
main_AutoColor_2_in_4 = NULL;
main_AutoColor_2_in_5 = NULL;
main_AutoColor_2_in_6 = NULL;
main_AutoColor_2_in_7 = NULL;
main_AutoColor_2_in_8 = NULL;
main_AutoColor_2_in_9 = NULL;
main_AutoColor_2_in_10 = NULL;
main_AutoColor_2_out_1 = NULL;
main_AutoGlyph_1_in_2 = "arrow2D";
main_AutoGlyph_1_in_3 = NULL;
main_AutoGlyph_1_in_4 = NULL;
main_AutoGlyph_1_in_5 = NULL;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_RubberSheet_1_in_2 = 0.01;
main_RubberSheet_1_in_3 = NULL;
main_RubberSheet_1_in_4 = 0.1;
main_RubberSheet_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
frequencyi = 10;
amplitudei = 10;
sxi = 5;
syi = 10;
stepi = 119;
nti = 131;
finishsteeringi = 0;
h0i = 10;
main_StringList_5_out_1 = { "syo", "sxo", "amplitudeo", "frequencyo", "h0o" };
main_DXLOutput_3_in_1 = "float_output_list";
main_StringList_2_out_1 = { "syi", "sxi", "frequencyi", "amplitudei", "h0i" };
main_DXLOutput_4_in_1 = "float_input_list";
main_StringList_3_out_1 = { "stepo", "nto", "finishsteeringo" };
main_DXLOutput_5_in_1 = "int_output_list";
main_StringList_4_out_1 = { "stepi", "nti", "finishsteeringi" };
main_DXLOutput_6_in_1 = "int_input_list";
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 10.0 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = "frequency";
main_Scalar_3_out_1 = 10.0 ;
main_DXLOutput_7_in_1 = "frequencyo";
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 10.0 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_5 = NULL;
main_Scalar_4_in_6 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = NULL;
main_Scalar_4_out_1 = 10.0 ;
main_DXLOutput_8_in_1 = "amplitudeo";
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 5.0 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_5 = NULL;
main_Scalar_5_in_6 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = NULL;
main_Scalar_5_out_1 = 5.0 ;
main_DXLOutput_9_in_1 = "sxo";
main_Scalar_6_in_1 = "Scalar_6";
main_Scalar_6_in_2 = NULL;
main_Scalar_6_in_3 = 10.0 ;
main_Scalar_6_in_4 = NULL;
main_Scalar_6_in_5 = NULL;
main_Scalar_6_in_6 = NULL;
main_Scalar_6_in_7 = NULL;
main_Scalar_6_in_8 = NULL;
main_Scalar_6_in_9 = NULL;
main_Scalar_6_in_10 = NULL;
main_Scalar_6_in_11 = NULL;
main_Scalar_6_out_1 = 10.0 ;
main_DXLOutput_10_in_1 = "syo";
main_StringList_8_out_1 = { "camwidtho" };
main_DXLOutput_16_in_1 = "float_output_list";
main_StringList_9_out_1 = { "camwidthi" };
main_DXLOutput_17_in_1 = "float_input_list";
main_StringList_10_out_1 = { "nameo" };
main_DXLOutput_20_in_1 = "DXLOutput_20";
main_StringList_11_out_1 = { "namei" };
main_DXLOutput_21_in_1 = "DXLOutput_21";
main_StringList_12_out_1 = { "stepo" };
main_DXLOutput_22_in_1 = "DXLOutput_22";
main_StringList_13_out_1 = { "stepi" };
main_DXLOutput_23_in_1 = "DXLOutput_23";
main_StringList_6_out_1 = { "camupo", "camfromo", "camtoo" };
main_DXLOutput_25_in_1 = "DXLOutput_25";
main_StringList_7_out_1 = { "camfromi", "camtoi", "camupi" };
main_DXLOutput_26_in_1 = "DXLOutput_26";
main_Integer_11_in_1 = "Integer_11";
main_Integer_11_in_2 = NULL;
main_Integer_11_in_3 = 0 ;
main_Integer_11_in_4 = NULL;
main_Integer_11_in_5 = 0;
main_Integer_11_in_6 = 1;
main_Integer_11_in_7 = 1.0;
main_Integer_11_in_8 = NULL;
main_Integer_11_in_9 = NULL;
main_Integer_11_in_10 = NULL;
main_Integer_11_in_11 = NULL;
main_Integer_11_out_1 = 0 ;
main_DXLOutput_27_in_1 = "closedx";
main_Integer_12_in_1 = "Integer_12";
main_Integer_12_in_2 = NULL;
main_Integer_12_in_3 = 1 ;
main_Integer_12_in_4 = NULL;
main_Integer_12_in_5 = 0;
main_Integer_12_in_6 = 1;
main_Integer_12_in_7 = 1.0;
main_Integer_12_in_8 = NULL;
main_Integer_12_in_9 = NULL;
main_Integer_12_in_10 = NULL;
main_Integer_12_in_11 = NULL;
main_Integer_12_out_1 = 1 ;
main_DXLOutput_28_in_1 = "updatelocal";
main_Integer_13_in_1 = "Integer_13";
main_Integer_13_in_2 = NULL;
main_Integer_13_in_3 = 1 ;
main_Integer_13_in_4 = NULL;
main_Integer_13_in_5 = 0;
main_Integer_13_in_6 = 1;
main_Integer_13_in_7 = 1.0;
main_Integer_13_in_8 = NULL;
main_Integer_13_in_9 = NULL;
main_Integer_13_in_10 = NULL;
main_Integer_13_in_11 = NULL;
main_Integer_13_out_1 = 1 ;
main_DXLOutput_29_in_1 = "updateserver";
main_Integer_14_in_1 = "Integer_14";
main_Integer_14_in_2 = NULL;
main_Integer_14_in_3 = 0 ;
main_Integer_14_in_4 = NULL;
main_Integer_14_in_5 = 0;
main_Integer_14_in_6 = 1;
main_Integer_14_in_7 = 1.0;
main_Integer_14_in_8 = NULL;
main_Integer_14_in_9 = NULL;
main_Integer_14_in_10 = NULL;
main_Integer_14_in_11 = NULL;
main_Integer_14_out_1 = 0 ;
main_DXLOutput_30_in_1 = "finishsteeringo";
main_Scalar_7_in_1 = "Scalar_7";
main_Scalar_7_in_2 = NULL;
main_Scalar_7_in_3 = 500.0 ;
main_Scalar_7_in_4 = NULL;
main_Scalar_7_in_5 = NULL;
main_Scalar_7_in_6 = NULL;
main_Scalar_7_in_7 = NULL;
main_Scalar_7_in_8 = NULL;
main_Scalar_7_in_9 = NULL;
main_Scalar_7_in_10 = NULL;
main_Scalar_7_in_11 = NULL;
main_Scalar_7_out_1 = 500.0 ;
main_DXLOutput_31_in_1 = "h0o";
main_Format_25_in_1 = "%d %d %d %d %d %d %d";
main_Format_25_out_1 = NULL;
main_Echo_2_in_1 = {"f amp xloc yloc initialheight currentstep numsteps"};
main_Format_24_in_1 = "%s/steer%s.general";
main_Format_24_out_1 = NULL;
main_Format_26_in_1 = "%s/base%s.general";
main_Format_26_out_1 = NULL;
main_Format_1_in_1 = "echo 'file = tmp/%ss%d.out' > %s;cat %s >> %s";
main_Format_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [24.5235 25.7293 8.32469];
main_Image_2_in_6 = [-2.13964 -64.6352 116.02];
main_Image_2_in_7 = NULL;
main_Image_2_in_8 = 488;
main_Image_2_in_9 = 1.124;
main_Image_2_in_10 = [-0.108459 0.774594 0.62309];
main_Image_2_in_11 = 30.0;
main_Image_2_in_12 = 1;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = 0.5;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Transmitter_28_out_1 = NULL;
Executive("product version 4 4 0");
$sync
// This network contains DXLink tools.  Therefore, the following line(s)
// that would cause an execution when run in script mode have been 
// commented out.  This will facilitate the use of the DXLink routines
// exDXLLoadScript() and DXLLoadVisualProgram() when the DXLink
// application is connected to an executive.
// main();
