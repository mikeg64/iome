/* soapIoSteerWSProxy.h
   Generated by gSOAP 2.7.6e from IoSteerWS.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapIoSteerWS_H
#define soapIoSteerWS_H
#include "soapH.h"
class IoSteerWS
{   public:
	struct soap *soap;
	const char *endpoint;
	IoSteerWS()
	{ soap = soap_new(); endpoint = "http://mikeg.staff.shef.ac.uk/IOSteerWS.cgi"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns", "urn:IoSteerWS", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	virtual ~IoSteerWS() { if (soap) { soap_destroy(soap); soap_end(soap); soap_done(soap); soap_del(soap); } };
	virtual int ns__add(double a, double b, double *result) { return soap ? soap_call_ns__add(soap, endpoint, NULL, a, b, result) : SOAP_EOM; };
	virtual int ns__getstep(int id, int *step) { return soap ? soap_call_ns__getstep(soap, endpoint, NULL, id, step) : SOAP_EOM; };
	virtual int ns__setstep(int id, int newstep, int *step) { return soap ? soap_call_ns__setstep(soap, endpoint, NULL, id, newstep, step) : SOAP_EOM; };
	virtual int ns__getnsteps(int id, int *nsstep) { return soap ? soap_call_ns__getnsteps(soap, endpoint, NULL, id, nsstep) : SOAP_EOM; };
	virtual int ns__setnsteps(int id, int newnsteps, int *nsteps) { return soap ? soap_call_ns__setnsteps(soap, endpoint, NULL, id, newnsteps, nsteps) : SOAP_EOM; };
	virtual int ns__runsimulationstep(int id, int istepnum, int *status) { return soap ? soap_call_ns__runsimulationstep(soap, endpoint, NULL, id, istepnum, status) : SOAP_EOM; };
	virtual int ns__runsimulation(int id, char *simfilecontent, char **result) { return soap ? soap_call_ns__runsimulation(soap, endpoint, NULL, id, simfilecontent, result) : SOAP_EOM; };
	virtual int ns__requestsimulation(char *simfilecontent, int *isimid) { return soap ? soap_call_ns__requestsimulation(soap, endpoint, NULL, simfilecontent, isimid) : SOAP_EOM; };
	virtual int ns__runrequestedsimulation(int isimid, int *istatus) { return soap ? soap_call_ns__runrequestedsimulation(soap, endpoint, NULL, isimid, istatus) : SOAP_EOM; };
	virtual int ns__submitsimulation(char *simfilecontent, int *isimid) { return soap ? soap_call_ns__submitsimulation(soap, endpoint, NULL, simfilecontent, isimid) : SOAP_EOM; };
	virtual int ns__simulationstatus(int isimid, int *status) { return soap ? soap_call_ns__simulationstatus(soap, endpoint, NULL, isimid, status) : SOAP_EOM; };
	virtual int ns__setsimulationstatus(int newstatus, int isimid, int *status) { return soap ? soap_call_ns__setsimulationstatus(soap, endpoint, NULL, newstatus, isimid, status) : SOAP_EOM; };
	virtual int ns__getsimulationresults(int isimid, char **result) { return soap ? soap_call_ns__getsimulationresults(soap, endpoint, NULL, isimid, result) : SOAP_EOM; };
	virtual int ns__deletesimulation(int isimid, int *status) { return soap ? soap_call_ns__deletesimulation(soap, endpoint, NULL, isimid, status) : SOAP_EOM; };
	virtual int ns__newsimulation(int id, char *simname, char *xslname, int *status) { return soap ? soap_call_ns__newsimulation(soap, endpoint, NULL, id, simname, xslname, status) : SOAP_EOM; };
	virtual int ns__createsimulation(int id, char *filename, int *status) { return soap ? soap_call_ns__createsimulation(soap, endpoint, NULL, id, filename, status) : SOAP_EOM; };
	virtual int ns__writelocalsimulation(int id, char *filename, char **filecontent) { return soap ? soap_call_ns__writelocalsimulation(soap, endpoint, NULL, id, filename, filecontent) : SOAP_EOM; };
	virtual int ns__readlocalsimulation(int id, char *filename, int *status) { return soap ? soap_call_ns__readlocalsimulation(soap, endpoint, NULL, id, filename, status) : SOAP_EOM; };
	virtual int ns__writesimulation(int id, char *filename, char **filecontent) { return soap ? soap_call_ns__writesimulation(soap, endpoint, NULL, id, filename, filecontent) : SOAP_EOM; };
	virtual int ns__readsimulation(int id, char *filename, int *status) { return soap ? soap_call_ns__readsimulation(soap, endpoint, NULL, id, filename, status) : SOAP_EOM; };
	virtual int ns__exitiome(int id, int *status) { return soap ? soap_call_ns__exitiome(soap, endpoint, NULL, id, status) : SOAP_EOM; };
	virtual int ns__addparamdouble(int id, char *name, double value, int iflag, int *status) { return soap ? soap_call_ns__addparamdouble(soap, endpoint, NULL, id, name, value, iflag, status) : SOAP_EOM; };
	virtual int ns__addparamint(int id, char *name, int value, int iflag, int *status) { return soap ? soap_call_ns__addparamint(soap, endpoint, NULL, id, name, value, iflag, status) : SOAP_EOM; };
	virtual int ns__addparamvec(int id, char *name, struct fdata value, int n, int iflag, int *status) { return soap ? soap_call_ns__addparamvec(soap, endpoint, NULL, id, name, value, n, iflag, status) : SOAP_EOM; };
	virtual int ns__addparammat(int id, char *name, struct fdata value, int nr, int nc, int iflag, int *status) { return soap ? soap_call_ns__addparammat(soap, endpoint, NULL, id, name, value, nr, nc, iflag, status) : SOAP_EOM; };
	virtual int ns__addparamstring(int id, char *name, char *value, int iflag, int *status) { return soap ? soap_call_ns__addparamstring(soap, endpoint, NULL, id, name, value, iflag, status) : SOAP_EOM; };
	virtual int ns__addparammmat3d(int id, char *name, struct fdata value, int n, int p, int q, int nr, int nc, int iflag, int *status) { return soap ? soap_call_ns__addparammmat3d(soap, endpoint, NULL, id, name, value, n, p, q, nr, nc, iflag, status) : SOAP_EOM; };
	virtual int ns__addmetadata(int id, char *name, char *property, int *status) { return soap ? soap_call_ns__addmetadata(soap, endpoint, NULL, id, name, property, status) : SOAP_EOM; };
	virtual int ns__getparamdouble(int id, char *name, double *value) { return soap ? soap_call_ns__getparamdouble(soap, endpoint, NULL, id, name, value) : SOAP_EOM; };
	virtual int ns__getparamint(int id, char *name, int *value) { return soap ? soap_call_ns__getparamint(soap, endpoint, NULL, id, name, value) : SOAP_EOM; };
	virtual int ns__getparamvec(int id, char *name, int n, struct fdata **dval) { return soap ? soap_call_ns__getparamvec(soap, endpoint, NULL, id, name, n, dval) : SOAP_EOM; };
	virtual int ns__getparammat(int id, char *name, int nr, int nc, struct fdata **dval) { return soap ? soap_call_ns__getparammat(soap, endpoint, NULL, id, name, nr, nc, dval) : SOAP_EOM; };
	virtual int ns__getparamstring(int id, char *name, char **value) { return soap ? soap_call_ns__getparamstring(soap, endpoint, NULL, id, name, value) : SOAP_EOM; };
	virtual int ns__getparammmat3d(int id, char *name, int n, int p, int q, int nr, int nc, struct fdata **mmat3d) { return soap ? soap_call_ns__getparammmat3d(soap, endpoint, NULL, id, name, n, p, q, nr, nc, mmat3d) : SOAP_EOM; };
	virtual int ns__getmetadata(int id, char *name, char **property) { return soap ? soap_call_ns__getmetadata(soap, endpoint, NULL, id, name, property) : SOAP_EOM; };
	virtual int ns__setparamdouble(int id, char *name, double value, int *status) { return soap ? soap_call_ns__setparamdouble(soap, endpoint, NULL, id, name, value, status) : SOAP_EOM; };
	virtual int ns__setparamint(int id, char *name, int value, int *status) { return soap ? soap_call_ns__setparamint(soap, endpoint, NULL, id, name, value, status) : SOAP_EOM; };
	virtual int ns__setparamvec(int id, char *name, struct fdata value, int n, int *status) { return soap ? soap_call_ns__setparamvec(soap, endpoint, NULL, id, name, value, n, status) : SOAP_EOM; };
	virtual int ns__setparammat(int id, char *name, struct fdata value, int nr, int nc, int *status) { return soap ? soap_call_ns__setparammat(soap, endpoint, NULL, id, name, value, nr, nc, status) : SOAP_EOM; };
	virtual int ns__setparamstring(int id, char *name, char *value, int *status) { return soap ? soap_call_ns__setparamstring(soap, endpoint, NULL, id, name, value, status) : SOAP_EOM; };
	virtual int ns__setparammmat3d(int id, char *name, struct fdata value, int n, int p, int q, int nr, int nc, int *status) { return soap ? soap_call_ns__setparammmat3d(soap, endpoint, NULL, id, name, value, n, p, q, nr, nc, status) : SOAP_EOM; };
	virtual int ns__setmetadata(int id, char *name, char *property, int *status) { return soap ? soap_call_ns__setmetadata(soap, endpoint, NULL, id, name, property, status) : SOAP_EOM; };
	virtual int ns__listmetadata(int id, char **list) { return soap ? soap_call_ns__listmetadata(soap, endpoint, NULL, id, list) : SOAP_EOM; };
	virtual int ns__deletemetadata(int id, char *name, int *status) { return soap ? soap_call_ns__deletemetadata(soap, endpoint, NULL, id, name, status) : SOAP_EOM; };
	virtual int ns__deleteparam(char *name, int id, int *status) { return soap ? soap_call_ns__deleteparam(soap, endpoint, NULL, name, id, status) : SOAP_EOM; };
	virtual int ns__listparam(char *type, int id, char **list) { return soap ? soap_call_ns__listparam(soap, endpoint, NULL, type, id, list) : SOAP_EOM; };
	virtual int ns__getnumobj(int id, int *numobj) { return soap ? soap_call_ns__getnumobj(soap, endpoint, NULL, id, numobj) : SOAP_EOM; };
	virtual int ns__getobjnum(int id, int *objnum) { return soap ? soap_call_ns__getobjnum(soap, endpoint, NULL, id, objnum) : SOAP_EOM; };
	virtual int ns__testgroupbarrier(int id, int *state) { return soap ? soap_call_ns__testgroupbarrier(soap, endpoint, NULL, id, state) : SOAP_EOM; };
	virtual int ns__setgroupbarrier(int id, int state, int *newstate) { return soap ? soap_call_ns__setgroupbarrier(soap, endpoint, NULL, id, state, newstate) : SOAP_EOM; };
};
#endif
